name: TestPester-$(Build.BuildId)

variables:
- group: VariableGroup
- name: global_variable
  value: value_global-overwrite_1 
- name: directory_include
  value: ./include
- name: aVariable
  value: 'this is the build id : $(Build.BuildId)'
- template: ${{ variables.directory_include }}/variables.yml

trigger:
- master

jobs:
- job: jobD
  pool:
    vmImage: 'windows-latest'
  variables:
    testResultsFile: "$(Agent.WorkFolder)/testresults.xml"
  steps:
    - task: PowerShell@2
      displayName: 'Generate certificate'
      inputs:
        targetType: inline
        script: |
            $path = "$(System.DefaultWorkingDirectory)/cert"
            mkdir $path -ErrorAction SilentlyContinue
            $rand = "$path/rnd"
            $private = "$path/private.pem"
            $public = "$path/public.pem"
            $pfx = "$path/testcert.pfx"
            $password = 'DumyPwd'

            openssl rand -out $rand 659

            Write-Host "*** generate private"
            openssl genrsa -aes128 -passout pass:$password -out $private 2048

            Write-Host "*** generate public"
            openssl req -x509 -new -key $private -subj "/C=BE/ST=Brussels/L=Brussels/O=Belfius Bank/OU=CCoE/CN=belfius.be" -out $public -passin pass:$password -rand $rand

            Write-Host "*** generate pfx"
            openssl pkcs12 -export -in $public -inkey $private -out $pfx -passout pass:$password -passin pass:$password

            Write-Host "*** get info"
            openssl pkcs12 -info -in $pfx -passin pass:$password -passout pass:$password

    - task: AzurePowerShell@4
      displayName: Run Pester...
      condition: false
      inputs:
        azurePowerShellVersion: LatestVersion
        azureSubscription: "rg-playground-carth-service-connection"
        ScriptType: InlineScript
        Inline: |
            $PSVersionTable

            Install-Module -Name Pester -Force -ErrorAction Stop

            $PesterSettings = @{
              Script = @{
                Path = "$(System.DefaultWorkingDirectory)/tests/pester.tests.ps1"
                Parameters = @{
                  parameter1 = 'value of parameter1'
                  parameter2 = 'value of parameter2'
                }
              }
              OutputFile = "$(testResultsFile)"
              OutputFormat = "NUnitXml"
              EnableExit = $true
              Verbose = $true
            }

            Invoke-Pester @PesterSettings
    
    - task: PublishTestResults@2
      displayName: Publish Pester tests results
      condition: false
      inputs:
        testResultsFormat: 'NUnit'
        testResultsFiles: '$(testResultsFile)'

    - task: AzureCLI@2
      displayName: Show info
      inputs:
        azureSubscription: 'rg-playground-carth-service-connection'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: |
          $PSVersionTable
          az --version

    - script: echo $(System.AccessToken) | az devops login
      env:
        AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
      displayName: 'Login Azure DevOps Extension'
      
    - task: AzurePowerShell@5
      displayName: Download artificats AzurePowerShell
      env:
        AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
      inputs:
        azureSubscription: 'rg-playground-carth-service-connection'
        ScriptType: 'InlineScript'
        Inline: |
          az artifacts universal download --organization https://dev.azure.com/thierrycarels0265/ `
                                    --project="pipeline-playground" `
                                    --scope project `
                                    --feed publish-feed `
                                    --name pipelines-java-package `
                                    --version 0.0.10 `
                                    --path .
        azurePowerShellVersion: 'LatestVersion'

    - task: AzureCLI@2
      displayName: Download artificats AzureCLI
      env:
        AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
      inputs:
        azureSubscription: 'rg-playground-carth-service-connection'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
           az artifacts universal download --organization https://dev.azure.com/thierrycarels0265/ `
                                    --project="pipeline-playground" `
                                    --scope project `
                                    --feed publish-feed `
                                    --name pipelines-java-package `
                                    --version 0.0.10 `
                                    --path .