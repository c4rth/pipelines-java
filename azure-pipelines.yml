variables:
- group: VariableGroup
- template: variables.yml
- name: global_variable
  value: value_global-overwrite_1 

trigger:
- master

jobs:
- job: job1
  variables:
    job_variable1: value_job1    # this is only available in job1
  steps:
  - powershell: |
      $PSVersionTable
      Write-Host "powershell"
      Write-Host "Global variable from group = $(global_variable1)"
      Write-Host "Global variable = $(global_variable)"
      Write-Host "Job variable = $(job_variable1)"
      Write-Host "Job variable = $(JOB_VARIABLE1)"
      Write-Host "mysecret = $(mysecret)"
      Write-Host "mysecret = $env:MAPPED_SECRET"
      Write-Host "mysecret = $env:MYSECRET"
      Write-Host "other_Secret = $(otherSecret)"
      Write-Host "other_Secret = $env:MAPPED_OTHER_SECRET"
      Write-Host "otherSecret = $(otherSecret)"
      if ('$(mysecret)' -eq '$env:MAPPED_SECRET') {
        Write-Host "mysecret == $ env:MAPPED_SECRET"
      } else {
        Write-Host "mysecret != $ env:MAPPED_SECRET"
      }
      Write-Host "mysecret "  (('$(mysecret)' -eq '$env:MAPPED_SECRET') ? '==' : "!=") + " $ env:MAPPED_SECRET"
    env:
      MAPPED_SECRET: $(mySecret)
      MAPPED_OTHER_SECRET: $(otherSecret)

- job: job2
  dependsOn: [job1]
  variables:
    job_variable2: value_job2    # this is only available in job2
  steps:
  - powershell: |
      Write-Host "Global variable = $(global_variable)"
      Write-Host "Job variable = $(job_variable2)"
      Write-Host "Global variable = $(GLOBAL_VARIABLE)"